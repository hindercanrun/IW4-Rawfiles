{
  stateMap "passthrough"; // TODO

  vertexShader 3.0 "custom_blood_pool_lp_sm_i_sun_dfog_s_tc0n0_dtex_sm3.hlsl"
  {
    worldMatrix = constant.transposeWorldMatrix;
    viewProjectionMatrix = constant.transposeViewProjectionMatrix;
    shadowLookupMatrix = constant.transposeShadowLookupMatrix;
  }

  pixelShader 3.0 "custom_blood_pool_lp_sm_i_sun_dfog_b0c0n0s0px_sm3.hlsl"
  {
    specularMapSampler = material.specularMap;
    normalMapSampler = material.normalMap;
    colorMapSampler = material.colorMap;
    shadowmapSamplerSun = sampler.shadowmapSun;
    lightPosition = constant.light.position;
    lightDiffuse = constant.light.diffuse;
    lightSpecular = constant.light.specular;
    envMapParms = material.envMapParms;
  }

  vertex.position = code.position;
  vertex.color[0] = code.color;
  vertex.texcoord[0] = code.texcoord[0];
  vertex.normal = code.normal;
  vertex.texcoord[2] = code.tangent;
  vertex.texcoord[3] = code.texcoord[1];
}
