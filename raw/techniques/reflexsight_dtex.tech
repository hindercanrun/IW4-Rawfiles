{
  stateMap "passthrough"; // TODO

  vertexShader 3.0 "reflexsight.hlsl"
  {
    worldViewProjectionMatrix = constant.transposeWorldViewProjectionMatrix;
    worldViewMatrix = constant.transposeWorldViewMatrix;
    inverseTransposeWorldViewMatrix = constant.inverseWorldViewMatrix;
    detailScale = material.detailScale;
  }

  pixelShader 3.0 "reflexsight.hlsl"
  {
    colorMapSampler = material.colorMap;
    detailMapSampler = material.detailMap;
  }

  vertex.position = code.position;
  vertex.texcoord[0] = code.texcoord[0];
  vertex.normal = code.normal;
  vertex.texcoord[2] = code.tangent;
}
